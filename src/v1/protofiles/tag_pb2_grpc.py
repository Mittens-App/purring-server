# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import tag_pb2 as protofiles_dot_tag__pb2


class TagStub(object):
    """Tag Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/src.v1.tag.Tag/Create',
                request_serializer=protofiles_dot_tag__pb2.CreateRequest.SerializeToString,
                response_deserializer=protofiles_dot_tag__pb2.CreateResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/src.v1.tag.Tag/Get',
                request_serializer=protofiles_dot_tag__pb2.GetRequest.SerializeToString,
                response_deserializer=protofiles_dot_tag__pb2.GetResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/src.v1.tag.Tag/Delete',
                request_serializer=protofiles_dot_tag__pb2.DeleteRequest.SerializeToString,
                response_deserializer=protofiles_dot_tag__pb2.DeleteResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/src.v1.tag.Tag/Update',
                request_serializer=protofiles_dot_tag__pb2.UpdateRequest.SerializeToString,
                response_deserializer=protofiles_dot_tag__pb2.UpdateResponse.FromString,
                )


class TagServicer(object):
    """Tag Service
    """

    def Create(self, request, context):
        """Create new tag
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Return list of tags
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete tags
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Update existing tag
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=protofiles_dot_tag__pb2.CreateRequest.FromString,
                    response_serializer=protofiles_dot_tag__pb2.CreateResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=protofiles_dot_tag__pb2.GetRequest.FromString,
                    response_serializer=protofiles_dot_tag__pb2.GetResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=protofiles_dot_tag__pb2.DeleteRequest.FromString,
                    response_serializer=protofiles_dot_tag__pb2.DeleteResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=protofiles_dot_tag__pb2.UpdateRequest.FromString,
                    response_serializer=protofiles_dot_tag__pb2.UpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'src.v1.tag.Tag', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Tag(object):
    """Tag Service
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/src.v1.tag.Tag/Create',
            protofiles_dot_tag__pb2.CreateRequest.SerializeToString,
            protofiles_dot_tag__pb2.CreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/src.v1.tag.Tag/Get',
            protofiles_dot_tag__pb2.GetRequest.SerializeToString,
            protofiles_dot_tag__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/src.v1.tag.Tag/Delete',
            protofiles_dot_tag__pb2.DeleteRequest.SerializeToString,
            protofiles_dot_tag__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/src.v1.tag.Tag/Update',
            protofiles_dot_tag__pb2.UpdateRequest.SerializeToString,
            protofiles_dot_tag__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
